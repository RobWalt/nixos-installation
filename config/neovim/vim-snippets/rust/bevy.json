{
  "bevy-prelude": {
    "prefix": "bprelude",
    "body": [
      "use bevy::prelude::*;"
    ],
    "description": "import bevy prelude"
  },
  "define-component": {
    "prefix": "bcomp",
    "body": [
      "#[derive(Debug, Clone, Component, Default, Reflect)]",
      "pub struct ${1:type_name};"
    ],
    "description": "Define a bevy component"
  },
  "define-newtype-component": {
    "prefix": "bcompnt",
    "body": [
      "#[derive(Debug, Clone, Component, Deref, DerefMut, Default, Reflect)]",
      "pub struct ${1:type_name}(${2:inner});"
    ],
    "description": "Define a bevy component newtype"
  },
  "register-component-type-registry": {
    "prefix": "bregcomp",
    "body": [
      ".register_type::<${1:component_name}>()"
    ],
    "description": "Register component in type registry"
  },
  "define-plugin": {
    "prefix": "bplug",
    "body": [
      "pub struct ${1:plugin_name};",
      "",
      "impl Plugin for ${1:plugin_name} {",
      "  fn build(&self, app: &mut App) {",
      "    ${2:todo!();}",
      "  }",
      "}"
    ],
    "description": "Define a bevy component newtype"
  },
  "define-resource": {
    "prefix": "bres",
    "body": [
      "#[derive(Debug, Clone, Resource)]",
      "pub struct ${1:type_name}{",
      "  ${2:field_name}: ${3:field_type}",
      "}"
    ],
    "description": "Define a bevy resource"
  },
  "define-newtype-resource": {
    "prefix": "bresnt",
    "body": [
      "#[derive(Debug, Clone, Resource, Deref, DerefMut)]",
      "pub struct ${1:type_name}(${2:inner});"
    ],
    "description": "Define a bevy resource newtype"
  },
  "assets-resource": {
    "prefix": "basset",
    "body": [
      "Res<Assets<$1>>"
    ],
    "description": "Resource Assets"
  },
  "assets-resource-mut": {
    "prefix": "bmasset",
    "body": [
      "ResMut<Assets<$1>>"
    ],
    "description": "Mutable Resource Assets"
  },
  "commands": {
    "prefix": "comms",
    "body": [
      "mut commands: Commands"
    ],
    "description": "Commands Argument"
  }
}
