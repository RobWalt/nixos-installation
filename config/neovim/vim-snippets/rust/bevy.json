{
  "bevy-prelude": {
    "prefix": "bprel",
    "body": [
      "use bevy::prelude::*;"
    ],
    "description": "Bevy Prelude"
  },
  "bevy-component": {
    "prefix": "bcomp",
    "body": [
      "#[derive(Debug, Clone, Component, Default, Reflect)]",
      "pub struct ${1:type_name};"
    ],
    "description": "Bevy Component"
  },
  "bevy-component-newtype": {
    "prefix": "bcompnt",
    "body": [
      "#[derive(Debug, Clone, Component, Deref, DerefMut, Default, Reflect)]",
      "pub struct ${1:type_name}(${2:inner});"
    ],
    "description": "Bevy Component Newtype"
  },
  "bevy-register-type": {
    "prefix": "bregt",
    "body": [
      ".register_type::<${1:component_name}>()"
    ],
    "description": "Bevy Register Type"
  },
  "bevy-plugin": {
    "prefix": "bplug",
    "body": [
      "pub struct ${1:plugin_name};",
      "",
      "impl Plugin for ${1:plugin_name} {",
      "  fn build(&self, app: &mut App) {",
      "    ${2:todo!();}",
      "  }",
      "}"
    ],
    "description": "Bevy Plugin"
  },
  "bevy-resource": {
    "prefix": "bres",
    "body": [
      "#[derive(Debug, Clone, Resource)]",
      "pub struct ${1:type_name}{",
      "  ${2:field_name}: ${3:field_type}",
      "}"
    ],
    "description": "Bevy Resource"
  },
  "bevy-resource-newtype": {
    "prefix": "bresnt",
    "body": [
      "#[derive(Debug, Clone, Resource, Deref, DerefMut)]",
      "pub struct ${1:type_name}(${2:inner});"
    ],
    "description": "Bevy Resource Newtype"
  },
  "bevy-assets-resource": {
    "prefix": "bass",
    "body": [
      "Res<Assets<$1>>"
    ],
    "description": "Bevy Resource Assets"
  },
  "bevy-assets-resource-mut": {
    "prefix": "bmass",
    "body": [
      "ResMut<Assets<$1>>"
    ],
    "description": "Bevy Mutable Resource Assets"
  },
  "bevy-commands": {
    "prefix": "bcomms",
    "body": [
      "mut commands: Commands"
    ],
    "description": "Bevy Commands Argument"
  },
  "bevy-template-system-commands": {
    "prefix": "btsysc",
    "body": [
      "pub fn ${1:system_name}(",
      "  mut commands: Commands,",
      ") {",
      "${2:todo!(\"system code here\");}",
      "}"
    ],
    "description": "Bevy Template System with commands"
  },
  "bevy-query": {
    "prefix": "bqu",
    "body": [
      "Query<${1:components}>"
    ],
    "description": "Bevy Query"
  },
  "bevy-query-filtered": {
    "prefix": "bquf",
    "body": [
      "Query<${1:components}, ${2:filters}>"
    ],
    "description": "Bevy Query with Filters"
  },
  "bevy-event-reader": {
    "prefix": "bevr",
    "body": [
      "EventReader<${1:event_type}>"
    ],
    "description": "Bevy Event Reader"
  },
  "bevy-event-writer": {
    "prefix": "bevw",
    "body": [
      "EventWriter<${1:event_type}>"
    ],
    "description": "Bevy Event Writer"
  }
}
